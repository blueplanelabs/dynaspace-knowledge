OmEntry {	#tags : {		#author : 'GlamorousAuthor',		#time : DateAndTime [ '2023-07-11T11:01:22.98687+02:00' ],		#prior : OmReference [ 'Pharo10-SNAPSHOT-64bit-179ef65.a62wex5qxtj2pfs49s823t2bi', '2' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'KnowledgeAssimilator class',				#isMetaSide : true			},			#name : #'processKnowledgeSnippets:',			#protocol : #'processing knowledge',			#sourceCode : 'processKnowledgeSnippets: codeSnippets\r\tself initializeSharedBindings.\r\tcodeSnippets\r\t\tdo: [ :aSnippet | \r\t\t\t| context localBindingsToAdd bindingsToAdd snippetEvaluationResult |\r\t\t\tlocalBindingsToAdd := OrderedCollection\r\t\t\t\t\twith: (GtLocalVariablesBindings new localAt: #thisSnippet put: aSnippet).\r\t\t\tbindingsToAdd := sharedBindingsToAdd copyWithAll: localBindingsToAdd.\r\t\t\tcontext := aSnippet coder evaluationContext.\r\t\t\tbindingsToAdd do: [ :aBindingToAdd | context addBindings: aBindingToAdd ].\r\t\t\tsnippetEvaluationResult := aSnippet coder doItInContext: context.\r\t\t\tsharedBindingsToAdd := snippetEvaluationResult evaluationContext\r\t\t\t\t\tbindingStrategy bindings\r\t\t\t\t\tselect: [ :aBinding | aBinding isKindOf: GtSharedVariablesBindings ] ]',			#stamp : 'GlamorousAuthor 7/11/2023 10:50',			#package : #Lepiter-Literate		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'KnowledgeAssimilator class',				#isMetaSide : true			},			#name : #'processKnowledgeSnippets:',			#protocol : #'processing knowledge',			#sourceCode : 'processKnowledgeSnippets: codeSnippets\r\tself initializeSharedBindings.\r\tcodeSnippets\r\t\tdo: [ :aSnippet | \r\t\t\t(aSnippet isKindOf: LePharoSnippet)\r\t\t\t\tifTrue: [ | context localBindingsToAdd bindingsToAdd snippetEvaluationResult |\r\t\t\t\t\tlocalBindingsToAdd := OrderedCollection\r\t\t\t\t\t\t\twith: (GtLocalVariablesBindings new localAt: #thisSnippet put: aSnippet).\r\t\t\t\t\tbindingsToAdd := sharedBindingsToAdd copyWithAll: localBindingsToAdd.\r\t\t\t\t\tcontext := aSnippet coder evaluationContext.\r\t\t\t\t\tbindingsToAdd do: [ :aBindingToAdd | context addBindings: aBindingToAdd ].\r\t\t\t\t\tsnippetEvaluationResult := aSnippet coder doItInContext: context.\r\t\t\t\t\tsharedBindingsToAdd := snippetEvaluationResult evaluationContext\r\t\t\t\t\t\t\tbindingStrategy bindings\r\t\t\t\t\t\t\tselect: [ :aBinding | aBinding isKindOf: GtSharedVariablesBindings ] ] ]',			#stamp : 'GlamorousAuthor 7/11/2023 11:01',			#package : #Lepiter-Literate		},		#classPackageName : #Lepiter-Literate	}}